package com.irdstudio.smcenter.core.assembly.plugin.common;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import java.util.ArrayList;import java.util.List;/** * 数据表操作类-[表名: 01.平台参数信息表(s_param_info)] * 通过JDBC实现基本的数据表操作(CRUD)  * @author 代码自动生成 * @version 1.0 * @date 2013-11-06 */public class SParamInfoDao {	/* 连接对象 */	Connection conn = null;		public SParamInfoDao(Connection conn){		this.conn = conn;	}	/**	 * 根据主键查询单条记录	 * @param 	 * @return	 * @throws SQLException	 */	public SParamInfo querySParamInfoWithKeys(String paramCode)			throws SQLException {		SParamInfo dc = null;		PreparedStatement ps = null;		ResultSet rs = null;		try {			ps = conn					.prepareStatement("SELECT * FROM s_param_info WHERE param_code=?");			ps.setString(1,paramCode);			rs = ps.executeQuery();			if (rs.next()) {				dc = new SParamInfo();				dc.setParamCode(rs.getString("param_code"));				dc.setParamName(rs.getString("param_name"));				dc.setParamValue(rs.getString("param_value"));				dc.setParamScope(rs.getString("param_scope"));				dc.setSubsCode(rs.getString("subs_code"));				dc.setPluginId(rs.getInt("plugin_id"));				dc.setRemark(rs.getString("remark"));			}		} catch (SQLException e) {			throw new SQLException("querySParamInfoWithKeys is Wrong!"					+ e.getMessage());		} finally {			close(rs, null, ps);		}		return dc;	}	/**	 * 根据查询条件查询多条或单条记录	 * @param szCondition 	 * @return	 * @throws SQLException	 */	public List<SParamInfo> querySParamInfoWithCond(String szCondition,String szOrderBy)			throws SQLException {		List<SParamInfo> dcList = new ArrayList<SParamInfo>();		PreparedStatement ps = null;		ResultSet rs = null;		try {			ps = conn.prepareStatement("SELECT * FROM s_param_info "					+ szCondition + " " + szOrderBy + "");			rs = ps.executeQuery();			while (rs.next()) {				SParamInfo dc = new SParamInfo();				dc.setParamCode(rs.getString("param_code"));				dc.setParamName(rs.getString("param_name"));				dc.setParamValue(rs.getString("param_value"));				dc.setParamScope(rs.getString("param_scope"));				dc.setSubsCode(rs.getString("subs_code"));				dc.setPluginId(rs.getInt("plugin_id"));				dc.setRemark(rs.getString("remark"));				dcList.add(dc);			}		} catch (SQLException e) {			throw new SQLException("querySParamInfoWithCond is Wrong!"					+ e.getMessage());		} finally {			close(rs, null, ps);		}		return dcList;	}	/**	 * 关闭资源	 * @param theRs	 * @param theStmt	 * @param thePs	 */	protected void close(ResultSet theRs, Statement theStmt,			PreparedStatement thePs) {		try {			if (theRs != null)				theRs.close();			if (theStmt != null)				theStmt.close();			if (thePs != null)				thePs.close();		} catch (SQLException e) {			e.printStackTrace();		}	}}