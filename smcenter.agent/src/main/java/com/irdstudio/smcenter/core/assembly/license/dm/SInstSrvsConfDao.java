package com.irdstudio.smcenter.core.assembly.license.dm;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.sql.Statement;import java.util.ArrayList;import java.util.List;/** * 数据表操作类-[表名: 02.系统服务实例配置(s_inst_srvs_conf)] * 通过JDBC实现基本的数据表操作(CRUD)  * @author 代码自动生成 * @version 1.0 * @date 2014-07-13 */public class SInstSrvsConfDao {	/* 连接对象 */	Connection conn = null;		public SInstSrvsConfDao(Connection conn){		this.conn = conn;	}	/**	 * 根据主键查询单条记录	 * @param 	 * @return	 * @throws SQLException	 */	public SInstSrvsConf queryWithKeys(String srvsInstId)			throws SQLException {		SInstSrvsConf dc = null;		PreparedStatement ps = null;		ResultSet rs = null;		try {			ps = conn					.prepareStatement("SELECT * FROM s_inst_srvs_conf WHERE srvs_inst_id=?");			ps.setString(1,srvsInstId);			rs = ps.executeQuery();			if (rs.next()) {				dc = new SInstSrvsConf();				dc.setSrvsInstId(rs.getString("srvs_inst_id"));				dc.setSysInstId(rs.getString("sys_inst_id"));				dc.setSrvsCode(rs.getString("srvs_code"));				dc.setIsAllowService(rs.getString("is_allow_service"));				dc.setRsvFlag(rs.getString("rsv_flag"));			}		} catch (SQLException e) {			throw new SQLException("querySInstSrvsConfWithKeys is Wrong!"					+ e.getMessage());		} finally {			close(rs, null, ps);		}		return dc;	}	/**	 * 根据查询条件查询多条或单条记录	 * @param szCondition 	 * @return	 * @throws SQLException	 */	public List<SInstSrvsConf> queryWithCond(String szCondition,String szOrderBy)			throws SQLException {		List<SInstSrvsConf> dcList = new ArrayList<SInstSrvsConf>();		PreparedStatement ps = null;		ResultSet rs = null;		try {			ps = conn.prepareStatement("SELECT * FROM s_inst_srvs_conf "					+ szCondition + " " + szOrderBy);			rs = ps.executeQuery();			while (rs.next()) {				SInstSrvsConf dc = new SInstSrvsConf();				dc.setSrvsInstId(rs.getString("srvs_inst_id"));				dc.setSysInstId(rs.getString("sys_inst_id"));				dc.setSrvsCode(rs.getString("srvs_code"));				dc.setIsAllowService(rs.getString("is_allow_service"));				dc.setRsvFlag(rs.getString("rsv_flag"));				dcList.add(dc);			}		} catch (SQLException e) {			throw new SQLException("querySInstSrvsConfWithCond is Wrong!"					+ e.getMessage());		} finally {			close(rs, null, ps);		}		return dcList;	}	/**	 * 关闭资源	 * @param theRs	 * @param theStmt	 * @param thePs	 */	protected void close(ResultSet theRs, Statement theStmt,			PreparedStatement thePs) {		try {			if (theRs != null)				theRs.close();			if (theStmt != null)				theStmt.close();			if (thePs != null)				thePs.close();		} catch (SQLException e) {			e.printStackTrace();		}	}}