<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" default-lazy-init="false">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:system.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8" />
	</bean>

    
	<!-- Druid 数据库连接池监控配置 -->
	<!--  数据源 -->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
           <property name="driverClassName" value="${dataSource.driverClassName}"/>
           <property name="url" value="${dataSource.url}"/>
           <property name="username" value="${dataSource.username}"/>
           <property name="password" value="${dataSource.password}"/>
           <property name="maxActive" value="${dataSource.maxActive}"/>
           <property name="initialSize" value="${dataSource.initialSize}"></property>
            <property name="minIdle" value="${dataSource.minIdle}"></property>
           <property name="validationQuery" value="${dataSource.validationQuery}"/>

           <!--申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效-->
           <property name="testWhileIdle" value="${dataSource.testWhileIdle}"/>
           <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
           <property name="timeBetweenEvictionRunsMillis" value="${dataSource.timeBetweenEvictionRunsMillis}"/>
           <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
           <property name="minEvictableIdleTimeMillis" value="${dataSource.minEvictableIdleTimeMillis}"/>
           <!--申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。-->
           <property name="testOnBorrow" value="${dataSource.testOnBorrow}"/>
           <!--归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能-->
           <property name="testOnReturn" value="${dataSource.testOnReturn}"/>
           <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
           <!--是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。-->
           <property name="poolPreparedStatements" value="${dataSource.poolPreparedStatements}"/>
           <property name="maxPoolPreparedStatementPerConnectionSize" value="${dataSource.maxPoolPreparedStatementPerConnectionSize}"/>
           <!-- 配置监控统计拦截的filters merge:合并为参数化sql wall:防御sql注入-->
           <property name="filters" value="${dataSource.filters}"/>
       	   <property name="proxyFilters"> 
   				<list> 
    				<ref bean="logFilter" /> 
   				</list> 
  		   </property> 
           <!--日志输出执行慢的SQL-->
           <property name="connectionProperties" value="${dataSource.connectionProperties}" />
    </bean>
 	<bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"> 
  		<property name="statementExecutableSqlLogEnable" value="false" /> 
 	</bean>
	
	 <!-- ========================================分隔线========================================= -->
    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource" />
    </bean>
    
    <!-- <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    	<property name="transactionManager" ref="transactionManager" />
    	<property name="isolationLevelName" value="ISOLATION_READ_COMMITTED" />
    	<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
    </bean> -->

	 <!-- <tx:annotation-driven transaction-manager="transactionManager"/> --> 
	 <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="append*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="modify*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="repair" propagation="REQUIRED" />
            <tx:method name="delAndRepair" propagation="REQUIRED" />
            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="load*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="datagrid*" propagation="SUPPORTS" />
            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.irdstudio.ssm.admin.service.impl..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config> 
    
    <!-- 会话管理 -->
    <bean id="sessionManager" class="com.irdstudio.ssm.framework.session.SessionManager" init-method="initialize" destroy-method="terminate">
    	<property name="sessionTimeOut" value="3600000"></property>
    </bean>
  
	<context:annotation-config />
  	<context:component-scan base-package="com.irdstudio" />

	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>
    
    <!--数据持久化文件-->
	<import resource="classpath*:mybatis/ssm-mybatis-dao.xml" />
	
</beans>
